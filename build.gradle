/*
 * Copyright (C) Projective Software LLC, 2017 - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 */

buildscript {
    ext {
        springBootVersion = '2.1.13.RELEASE'
    }
    repositories {
        maven { url "https://psmvn1.projectivesoftware.com:8443/repository/iima-maven-repository-1/" }
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('com.bmuschko:gradle-docker-plugin:6.3.0')
        classpath('io.spring.gradle:propdeps-plugin:0.0.9.RELEASE')
        classpath('gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.5.2')
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'propdeps'
apply plugin: 'com.gorylenko.gradle-git-properties'

version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    maven { url "https://psmvn1.projectivesoftware.com:8443/repository/iima-maven-repository-1/" }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    compile('org.springframework.cloud:spring-cloud-starter-netflix-ribbon')
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.retry:spring-retry')
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'

    /*
     * Required for Java 9 compatibility
     */
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'

    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.8.9'
    runtime('com.h2database:h2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    optional('org.springframework.boot:spring-boot-configuration-processor')
}

compileJava.dependsOn(processResources)

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Greenwich.SR5"
    }
}

idea {
    project {
        languageLevel = '1.8'
    }
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.Dockerfile

task createDockerfile(type: Dockerfile) {
    from 'openjdk:12'
    copyFile jar.archiveName, '/' + jar.archiveName
    entryPoint 'sh', '-c', 'java ${JAVA_OPTS} -jar /' + jar.archiveName
}

task buildImage(type: DockerBuildImage) {
    dependsOn createDockerfile
    images.add('projective-software/' + "ps-" + jar.baseName + ':latest')
}

task syncJarFile(type: Sync) {
    dependsOn assemble
    from jar.archivePath
    into buildImage.inputDir
}

createDockerfile.dependsOn(syncJarFile)
buildImage.dependsOn(syncJarFile)